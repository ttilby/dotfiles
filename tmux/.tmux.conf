# tmux configuration file

# README
#===================================================================
# tmux-mem-cpu-load must be installed to function since tpm just
#  clones the soruce
# cmake .
# make
# make install
#===================================================================
# the pane-border-format.sh script will not work on default bash that
# comes with macOS (v3.2). Need to update bash.
# brew install bash
# sudo vim /etc/shells
# add /usr/local/bin/bash
#===================================================================

# This should be before any 'run' command, attempting to fix error 127
set-environment -g PATH "/usr/local/bin:/bin:/usr/bin:$HOME/bin:$HOME/.fzf/bin"

# added after upgrade to 24.04
set-environment -g DISPLAY $DISPLAY
# set-environment -g WAYLAND_DISPLAY $WAYLAND_DISPLAY

# easy tmux reload <prefix> r
bind r source-file ~/.tmux.conf \; display "Reloaded ~/.tmux.conf"

# set mouse mode to allow use of mouse for copying, scrolling, etc.
set -g mouse on

# set-option -g set-clipboard on

set -g default-terminal "tmux-256color"

# this value should match the $TERM value outside of tmux, and it will tell
# tmux that this terminal supports TrueColor
# -- Use this value for iTerm2
# set -ga terminal-overrides ",xterm-256color:Tc"
# -- Use this value for alacritty
set -ga terminal-overrides ",alacritty:Tc"
set-option -sa terminal-features ',alacritty:RGB'

set -g base-index 1
set -g pane-base-index 1
set -g history-limit 40000

# needed for vim-gitgutter to update properly
set -g focus-events

# custom split keys
unbind-key %
bind-key | split-window -h -c "#{pane_current_path}"
unbind-key '"'
bind-key - split-window -v -c "#{pane_current_path}"

# Added to prevent odd delay when hitting ESC in neovim
set -sg escape-time 10

# session switcher in popup
bind C-j display-popup -E "tmux list-sessions -F '#{?session_attached,,#{session_name}}' | grep -v '^$' | fzf --reverse | xargs tmux switch-client -t"

#--------------------------------------------------------------#
# Pane colors
# taken from https://github.com/odedlaz/tmux-onedark-theme

onedark_black="#282c34"
onedark_blue="#61afef"
onedark_yellow="#e5c07b"
onedark_red="#e06c75"
onedark_white="#aab2bf"
onedark_green="#98c379"
onedark_visual_grey="#3e4452"
onedark_comment_grey="#5c6370"
inactive_pane="#16181c"

set -g message-style fg=$onedark_white,bg=$onedark_black
setw -g window-status-style fg=$onedark_black,bg=$onedark_black,none
setw -g window-status-activity-style fg=$onedark_black,bg=$onedark_black,none
setw -g window-status-separator ''
set -g window-style fg=$onedark_comment_grey,bg=$inactive_pane
set -g window-active-style fg=$onedark_white,bg=$onedark_black
set -g pane-border-style fg=$onedark_white,bg=$onedark_black
set -g pane-active-border-style fg=$onedark_green,bg=$onedark_black
set -g display-panes-active-colour $onedark_yellow
set -g display-panes-colour $onedark_blue
set -g status-style fg=$onedark_white,bg=$onedark_black
set -g @prefix_highlight_fg $onedark_black
set -g @prefix_highlight_bg $onedark_green
set -g @prefix_highlight_copy_mode_attr 'fg=$onedark_black,bg=$onedark_green'
set -g @prefix_highlight_output_prefix ' î‚± '

# setw -g automatic-rename off
set -g allow-rename off
set -g window-status-format "#[fg=$onedark_white,bg=$onedark_black] #I| #W#{?window_flags,#{window_flags}, } "
set -g window-status-current-format "#[fg=$onedark_white,bg=$onedark_visual_grey,nobold] #I| #W#{?window_flags,#{window_flags}, } "
#--------------------------------------------------------------#

# Testing git status in tmux
set -g pane-border-status bottom
set -g pane-border-format '#(bash ~/.tmux/pane-border-format.sh \
  --pane-current-path=#{pane_current_path} \
  --pane-active=#{pane_active})'
set -g status-interval 1
#--------------------------------------------------------------#

#--------------------------------------------------------------#
# Smart pane switching with awareness of Vim splits.
# See: https://github.com/christoomey/vim-tmux-navigator
is_vim="ps -o state= -o comm= -t '#{pane_tty}' \
    | grep -iqE '^[^TXZ ]+ +(\\S+\\/)?g?(view|n?vim?x?)(diff)?$'"
bind-key -n C-h if-shell "$is_vim" "send-keys C-h"  "select-pane -L"
bind-key -n C-j if-shell "$is_vim" "send-keys C-j"  "select-pane -D"
bind-key -n C-k if-shell "$is_vim" "send-keys C-k"  "select-pane -U"
bind-key -n C-l if-shell "$is_vim" "send-keys C-l"  "select-pane -R"
bind-key -n C-\\ if-shell "$is_vim" "send-keys C-\\" "select-pane -l"

bind-key -T copy-mode-vi C-h select-pane -L
bind-key -T copy-mode-vi C-j select-pane -D
bind-key -T copy-mode-vi C-k select-pane -U
bind-key -T copy-mode-vi C-l select-pane -R
bind-key -T copy-mode-vi C-\\ select-pane -l

# Smart pane resizing with awareness of Vim splits.
# See: https://github.com/RyanMillerC/better-vim-tmux-resizer
bind-key -n M-h if-shell "$is_vim" "send-keys M-h"  "resize-pane -L 10"
bind-key -n M-j if-shell "$is_vim" "send-keys M-j"  "resize-pane -D 5"
bind-key -n M-k if-shell "$is_vim" "send-keys M-k"  "resize-pane -U 5"
bind-key -n M-l if-shell "$is_vim" "send-keys M-l"  "resize-pane -R 10"

bind-key -T copy-mode-vi M-h resize-pane -L 10
bind-key -T copy-mode-vi M-j resize-pane -D 5
bind-key -T copy-mode-vi M-k resize-pane -U 5
bind-key -T copy-mode-vi M-l resize-pane -R 10
#--------------------------------------------------------------#

#--------------------------------------------------------------#
# Status bar

# Net Speed
set -g @net_speed_interfaces "eno1"
set -g @net_speed_format "D:%10s U:%10s"

# Script variables
hdd_drive="/dev/nvme0n1p2"
network_interface="eno1"

set -g status-interval 2
set -g status-justify centre              # window list in middle
# show host name and IP address on left side of status bar
set -g status-left-length 85
set -g status-left "#h : #(ip addr show $network_interface | grep "inet[^6]" | awk '{print $2}') : #S"
set -g status-right-length 100
set -g status-right '#[fg=$onedark_white,bg=$onedark_visual_grey]#(~/.tmux/kube-context.sh "$onedark_red") #[fg=$onedark_white,bg=$onedark_blue]#(~/.tmux/hdd_usage.sh "$hdd_drive") #[bg=$onedark_green] #{net_speed} #($TMUX_PLUGIN_MANAGER_PATH/tmux-mem-cpu-load/tmux-mem-cpu-load --colors --interval 2) #[default]'
#set -g status-right 'continuum:#{continuum_status} | #{sysstat_cpu} | #{sysstat_mem} | #{sysstat_swap} | #{sysstat_loadavg} | #[fg=cyan]#(echo $USER)#[default]@#H'
#--------------------------------------------------------------#

#--------------------------------------------------------------#
# Session Management
# set -g @continuum-save-interval '720' # minutes (720 = 12 hours)
# set -g @resurrect-strategy-vim 'session'

# vi keybindings

#--------------------------------------------------------------#
# copy / paste with system clipboard
# *** WIP ***
#--------------------------------------------------------------#
setw -g mode-keys vi

bind-key -T copy-mode-vi MouseDragEnd1Pane send-keys -X copy-pipe-and-cancel "xclip -in -selection clipboard"
# bind-key -T copy-mode-vi MouseDragEnd1Pane send-keys -X copy-pipe-and-cancel "wl-copy"

# macos: brew install reattach-to-user-namespace
# copy
#if-shell 'uname | grep -qi Darwin && which reattach-to-user-namespace > /dev/null' 'bind-key -n -t emacs-copy M-w copy-pipe "reattach-to-user-namespace pbcopy"'
# paste
#if-shell 'uname | grep -qi Darwin && which reattach-to-user-namespace > /dev/null' 'bind

# linux: sudo apt install xclip
# copy
#if-shell 'uname | grep -qi Linux && which xclip > /dev/null' 'bind-key -n -t emacs-copy M-w copy-pipe "xclip -i -sel p -f | xclip -i -sel c "'
# paste:
#if-shell 'uname | grep -qi Linux && which xclip > /dev/null' 'bind-key -n C-y run "xclip -o


#--------------------------------------------------------------#
# Plugins
# https://github.com/tmux-plugins/tpm
# Add plugins here and reload with "<prefix> + r", then install with "<prefix> + I"
# set -g @plugin 'fcsonline/tmux-thumbs'
# set -g @plugin 'laktak/extrakto'
# set -g @plugin 'tmux-plugins/tmux-resurrect'
# set -g @plugin 'tmux-plugins/tmux-continuum'
set -g @plugin 'tmux-plugins/tmux-yank'
set -g @plugin 'tmux-plugins/tmux-net-speed'
set -g @plugin 'thewtex/tmux-mem-cpu-load'

# Initialize TMUX plugin manager (keep this line at the very bottom of tmux.conf)
run '~/.tmux/plugins/tpm/tpm'
